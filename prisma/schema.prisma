// Prisma schema for SQLite
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Game {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  kind        String    @default("SENTENCE")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  rounds      Round[]
}

model Round {
  id        Int      @id @default(autoincrement())
  gameId    Int
  index     Int
  title     String
  targets   String   // JSON-encoded array of strings
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  game   Game   @relation(fields: [gameId], references: [id])

  @@unique([gameId, index])
  @@index([gameId, index])
}

// Note: SQLite has no native enums; using string for kind

model HangmanGame {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  words       HangmanWord[]
}

model HangmanWord {
  id        Int          @id @default(autoincrement())
  gameId    Int
  index     Int
  text      String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  game      HangmanGame  @relation(fields: [gameId], references: [id])

  @@unique([gameId, index])
  @@index([gameId, index])
}

// Minesweeper multiple-choice question sets
model MinesweeperGame {
  id          Int                    @id @default(autoincrement())
  name        String                 @unique
  description String?
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt
  questions   MinesweeperQuestion[]
}

model MinesweeperQuestion {
  id            Int              @id @default(autoincrement())
  gameId        Int
  index         Int
  prompt        String
  choices       String           // JSON-encoded array of strings
  correctIndex  Int
  explanation   String?
  imageUrl      String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt

  game          MinesweeperGame  @relation(fields: [gameId], references: [id])

  @@unique([gameId, index])
  @@index([gameId, index])
}
